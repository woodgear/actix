(function() {var implementors = {};
implementors["actix"] = ["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"actix/enum.ActorState.html\" title=\"enum actix::ActorState\">ActorState</a>","impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"actix/struct.SpawnHandle.html\" title=\"struct actix::SpawnHandle\">SpawnHandle</a>","impl&lt;M:&nbsp;'static&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"trait\" href=\"actix/prelude/actix/trait.Subscriber.html\" title=\"trait actix::prelude::actix::Subscriber\">Subscriber</a>&lt;M&gt;&gt;","impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"actix/struct.Address.html\" title=\"struct actix::Address\">Address</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: <a class=\"trait\" href=\"actix/prelude/actix/trait.Actor.html\" title=\"trait actix::prelude::actix::Actor\">Actor</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;A::<a class=\"type\" href=\"actix/prelude/actix/trait.Actor.html#associatedtype.Context\" title=\"type actix::prelude::actix::Actor::Context\">Context</a>: <a class=\"trait\" href=\"actix/prelude/actix/trait.AsyncContext.html\" title=\"trait actix::prelude::actix::AsyncContext\">AsyncContext</a>&lt;A&gt;,&nbsp;</span>","impl&lt;A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"actix/struct.SyncAddress.html\" title=\"struct actix::SyncAddress\">SyncAddress</a>&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: <a class=\"trait\" href=\"actix/prelude/actix/trait.Actor.html\" title=\"trait actix::prelude::actix::Actor\">Actor</a>,&nbsp;</span>","impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"actix/struct.SystemRegistry.html\" title=\"struct actix::SystemRegistry\">SystemRegistry</a>","impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"actix/actors/signal/enum.SignalType.html\" title=\"enum actix::actors::signal::SignalType\">SignalType</a>","impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"actix/actors/dns/enum.Family.html\" title=\"enum actix::actors::dns::Family\">Family</a>","impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"actix/actors/dns/enum.SocketType.html\" title=\"enum actix::actors::dns::SocketType\">SocketType</a>","impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"actix/actors/dns/enum.Protocol.html\" title=\"enum actix::actors::dns::Protocol\">Protocol</a>","impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"actix/actors/dns/struct.AddrInfo.html\" title=\"struct actix::actors::dns::AddrInfo\">AddrInfo</a>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
